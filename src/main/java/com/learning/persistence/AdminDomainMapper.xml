<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.persistence.AdminDomainMapper">
  <resultMap id="BaseResultMap" type="com.learning.domain.AdminDomain" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="role_uuid" property="roleUuid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="RoleResultMap" type="com.learning.vo.AdminListVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="role_uuid" property="roleUuid" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uuid, login_name, password, created_at, role_uuid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectOne" parameterType="com.learning.domain.AdminDomain" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from admin
    <trim prefix="where" suffixOverrides="and">
      <if test="id != null">
        id = #{id}
      </if>
      <if test="uuid != null and uuid != ''">
        uuid LIKE concat('%', #{uuid}, '%')
      </if>
      <if test="loginName != null and loginName != ''">
        login_name LIKE CONCAT('%', #{loginName}, '%')
      </if>
      <if test="password != null and password != ''">
        password LIKE CONCAT('%', #{password}, '%')
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt}
      </if>
      <if test="roleUuid != null and roleUuid != ''">
        role_uuid = #{roleUuid}
      </if>
    </trim>
  </select>
  <select id="selectAll" resultMap="RoleResultMap">
    SELECT
    admin.id id, admin.uuid uuid, login_name, password, admin.created_at created_at, role_uuid, role_name
    from admin admin, role role
    where admin.role_uuid = role.uuid
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learning.domain.AdminDomain">
    insert into admin (id, uuid, login_name, 
      password, created_at, role_uuid
      )
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{roleUuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.learning.domain.AdminDomain">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="loginName != null and loginName != ''">
        login_name,
      </if>
      <if test="password != null and password != ''">
        password,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="roleUuid != null and roleUuid != ''">
        role_uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="roleUuid != null">
        #{roleUuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learning.domain.AdminDomain">
    update admin
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="roleUuid != null">
        role_uuid = #{roleUuid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learning.domain.AdminDomain">
    update admin
    set uuid = #{uuid,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      role_uuid = #{roleUuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>